{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar isCollection = require( '@stdlib/assert-is-collection' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Returns a function that applies specified arguments to a provided function.\n*\n* @param {Function} fcn - input function\n* @param {NonNegativeIntegerArray} indices - argument indices\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be an array of nonnegative integers\n* @returns {Function} function wrapper\n*\n* @example\n* function foo( a, b ) {\n*     return [ a, b ];\n* }\n*\n* var bar = pickArguments( foo, [ 0, 2 ] );\n*\n* var out = bar( 1, 2, 3 );\n* // returns [ 1, 3 ]\n*/\nfunction pickArguments( fcn, indices, thisArg ) {\n\tvar fcns;\n\tvar idx;\n\tvar v;\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isCollection( indices ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object containing nonnegative integers. Value: `%s`.', indices ) );\n\t}\n\tidx = [];\n\tfor ( i = 0; i < indices.length; i++ ) {\n\t\tv = indices[ i ];\n\t\tif ( !isNonNegativeInteger( v ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object containing nonnegative integers. Value: `%s`.', indices ) );\n\t\t}\n\t\tidx.push( v );\n\t}\n\tfcns = [ nullary, unary, binary, ternary, quaternary, quinary ];\n\treturn ( idx.length < fcns.length ) ? fcns[ idx.length ] : nary;\n\n\t/**\n\t* Invokes a nullary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction nullary() {\n\t\treturn fcn.call( thisArg );\n\t}\n\n\t/**\n\t* Invokes a unary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction unary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ] );\n\t}\n\n\t/**\n\t* Invokes a binary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction binary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ], arguments[ idx[1] ] );\n\t}\n\n\t/**\n\t* Invokes a ternary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction ternary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ], arguments[ idx[1] ], arguments[ idx[2] ] ); // eslint-disable-line max-len\n\t}\n\n\t/**\n\t* Invokes a quaternary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction quaternary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ], arguments[ idx[1] ], arguments[ idx[2] ], arguments[ idx[3] ] ); // eslint-disable-line max-len\n\t}\n\n\t/**\n\t* Invokes a quinary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction quinary() {\n\t\treturn fcn.call( thisArg, arguments[ idx[0] ], arguments[ idx[1] ], arguments[ idx[2] ], arguments[ idx[3] ], arguments[ idx[4] ] ); // eslint-disable-line max-len\n\t}\n\n\t/**\n\t* Invokes an n-ary function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction nary() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ idx[i] ] );\n\t\t}\n\t\treturn fcn.apply( thisArg, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = pickArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a function that applies specified arguments to a provided function.\n*\n* @module @stdlib/utils-pick-arguments\n*\n* @example\n* var pickArguments = require( '@stdlib/utils-pick-arguments' );\n*\n* function foo( a, b ) {\n*     return [ a, b ];\n* }\n*\n* var bar = pickArguments( foo, [ 0, 2 ] );\n*\n* var out = bar( 1, 2, 3 );\n* // returns [ 1, 3 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],"names":["isFunction","require$$0","isNonNegativeInteger","require$$1","isPrimitive","isCollection","require$$2","format","require$$3","lib","fcn","indices","thisArg","fcns","idx","v","i","TypeError","length","push","call","arguments","args","apply"],"mappings":";;gWAsBA,IAAIA,EAAaC,EACbC,EAAuBC,EAAmDC,YAC1EC,EAAeC,EACfC,EAASC,EAuIb,ICnHAC,EDKA,SAAwBC,EAAKC,EAASC,GACrC,IAAIC,EACAC,EACAC,EACAC,EACJ,IAAMhB,EAAYU,GACjB,MAAM,IAAIO,UAAWV,EAAQ,oEAAqEG,IAEnG,IAAML,EAAcM,GACnB,MAAM,IAAIM,UAAWV,EAAQ,+GAAgHI,IAG9I,IADAG,EAAM,GACAE,EAAI,EAAGA,EAAIL,EAAQO,OAAQF,IAAM,CAEtC,GADAD,EAAIJ,EAASK,IACPd,EAAsBa,GAC3B,MAAM,IAAIE,UAAWV,EAAQ,+GAAgHI,IAE9IG,EAAIK,KAAMJ,GAGX,OADAF,EAAO,CAUP,WACC,OAAOH,EAAIU,KAAMR,IAUlB,WACC,OAAOF,EAAIU,KAAMR,EAASS,UAAWP,EAAI,MAU1C,WACC,OAAOJ,EAAIU,KAAMR,EAASS,UAAWP,EAAI,IAAMO,UAAWP,EAAI,MAU/D,WACC,OAAOJ,EAAIU,KAAMR,EAASS,UAAWP,EAAI,IAAMO,UAAWP,EAAI,IAAMO,UAAWP,EAAI,MAUpF,WACC,OAAOJ,EAAIU,KAAMR,EAASS,UAAWP,EAAI,IAAMO,UAAWP,EAAI,IAAMO,UAAWP,EAAI,IAAMO,UAAWP,EAAI,MAUzG,WACC,OAAOJ,EAAIU,KAAMR,EAASS,UAAWP,EAAI,IAAMO,UAAWP,EAAI,IAAMO,UAAWP,EAAI,IAAMO,UAAWP,EAAI,IAAMO,UAAWP,EAAI,OAjErHA,EAAII,OAASL,EAAKK,OAAWL,EAAMC,EAAII,QA2EhD,WACC,IAAII,EACAN,EAGJ,IADAM,EAAO,GACDN,EAAI,EAAGA,EAAIK,UAAUH,OAAQF,IAClCM,EAAKH,KAAME,UAAWP,EAAIE,KAE3B,OAAON,EAAIa,MAAOX,EAASU"}